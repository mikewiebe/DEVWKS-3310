---
- name: Create switch password update list
  set_fact:
    update_list: "{{ update_list + update }}"
  loop: "{{ fabric.inventory }}"
  loop_control:
    label: "{{ item.seed_ip }}"
    index_var: i
  vars:
    update_list: []
    update:
      - path: fabric.inventory[{{ i }}].password
        value: "{{ switch_password }}"

- name: Update switch passwords
  ansible.utils.update_fact:
    updates: "{{ update_list }}"
  register: updated_fabric


- name: Current inventory for fabric {{ fabric.name }}
  debug:
    msg: "role: {{ item.role }}"
  loop: "{{ updated_fabric.fabric.inventory }}"
  loop_control:
    label: "{{ item.seed_ip }}"

- debug: msg="{{ updated_fabric }}"

- name: create fabric {{ fabric.name }} on ndfc
  vars:
    payload:
      BGP_AS: "{{ fabric.asn }}"
      GRFIELD_DEBUG_FLAG: "Enable"
  dcnm_rest:
    method: POST
    path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ fabric.name }}/Easy_Fabric"
    json_data: "{{ payload| to_json }}"
  ignore_errors: true

- debug: msg="Spine Device IP {{ device_spine }}"
- debug: msg="Leaf1 Device IP {{ device_leaf1 }}"
- debug: msg="Leaf2 Device IP {{ device_leaf2 }}"

- name: Build inventory for fabric {{ fabric.name }}
  dcnm_inventory:
    fabric: "{{ fabric.name }}"
    config: "{{ updated_fabric.fabric.inventory }}"
  vars:
      ansible_command_timeout: 1000
      ansible_connect_timeout: 1000
  tags:
    - inventory

- name: query leaf serial number of {{ fabric.name }}
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ fabric.name }}"
    state: query
    config:
      - seed_ip: "{{ device_leaf1 }}"
      - seed_ip: "{{ device_leaf2 }}"
  vars:
      ansible_command_timeout: 1000
      ansible_connect_timeout: 1000
  register: leaf_sws
  tags:
    - vpc

- name: Bring up vPC Peer-Link Ethernet Interfaces
  dcnm_interface:
    check_deploy: True
    fabric: "{{ fabric.name }}" 
    state: merged
    config:
      - name: Ethernet1/8
        type: eth
        switch:
          - "{{ device_leaf1 }}"
          - "{{ device_leaf2 }}"
        deploy: true
        profile:
          admin_state: true
          mode: trunk
          speed: '10Gb'
          bpdu_guard: true
          port_type_fast: true
          mtu: jumbo
          allowed_vlans: none
      - name: Ethernet1/9
        type: eth
        switch:
          - "{{ device_leaf1 }}"
          - "{{ device_leaf2 }}"
        deploy: true
        profile:
          admin_state: true
          mode: trunk
          speed: '10Gb'
          bpdu_guard: true
          port_type_fast: true
          mtu: jumbo
          allowed_vlans: none
  ignore_errors: true

- name: create VPC peer on leaf {{ device_leaf1  }}|{{ device_leaf2 }}
  vars:
    payload:
      peerOneId: "{{leaf_sws.response[0].serialNumber}}"
      peerTwoId: "{{leaf_sws.response[1].serialNumber}}"
      useVirtualPeerlink: false
  cisco.dcnm.dcnm_rest:
    method: POST
    path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/vpcpair"
    json_data: "{{ payload | to_json }}"
  ignore_errors: true
  tags:
    - vpc
  
- name: save config of fabric {{fabric.name}}
  cisco.dcnm.dcnm_rest:
    method: POST
    path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{fabric.name}}/config-save"

- name: re-deploy inventory {{fabric.name}}
  cisco.dcnm.dcnm_rest:
    path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{fabric.name}}/config-deploy?forceShowRun=false"
    method: POST
  vars:
      ansible_command_timeout: 90
      ansible_connect_timeout: 90
